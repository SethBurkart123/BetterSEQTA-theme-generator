// Variables
$better-pale: #d3dbe9;
$text-color: #56535f;
$background-color: #E4EBF5;
$background-color-dark: color-mix(in srgb, $background-color 98%, black 2%);
$shadow-color: #c8d0e7;
$white: #FFF;

// Dark mode variables
$dark-background-color: #1e2430;
$dark-background-color-light: color-mix(in srgb, $dark-background-color 95%, white 5%);
$dark-shadow-color-dark: #161c25;
$dark-shadow-color-light: #2a3545;
$dark-text-color: #e5e7eb;

:root {
  --better-pale: #{$better-pale} !important;
  --text-color: #{$text-color} !important;
  --background-primary: #ffffff !important;
  --background-secondary: #e5e7eb !important;
  --theme-primary: #ffffff !important;
  --theme-secondary: #e5e7eb !important;
  --text-primary: black !important;
}

.dark {
  --better-pale: #{$dark-background-color-light} !important;
  --text-color: #{$dark-text-color} !important;
  --background-primary: #{$dark-background-color} !important;
  --background-secondary: #{$dark-shadow-color-dark} !important;
  --theme-primary: #{$dark-background-color} !important;
  --theme-secondary: #{$dark-shadow-color-dark} !important;
  --text-primary: #{$dark-text-color} !important;
}

:root, html, body, div, ol, ul {
  scrollbar-color: rgba(black, 0.2) transparent !important;
}

:root::-webkit-scrollbar-thumb {
  background: rgba(black, 0.2) !important;
  border-radius: 8px !important;
}

// Mixins
@mixin neumorphic-outer($intensity: 1) {
  box-shadow: 
    #{-10 * $intensity}px #{-10 * $intensity}px #{30 * $intensity}px $white,
    #{10 * $intensity}px #{10 * $intensity}px #{30 * $intensity}px rgba($shadow-color, 0.25);
}

@mixin neumorphic-inner($intensity: 1) {
  box-shadow: 
    inset #{-10 * $intensity}px #{-10 * $intensity}px #{10 * $intensity}px rgba($shadow-color, 0.15),
    inset #{10 * $intensity}px #{10 * $intensity}px #{10 * $intensity}px $white,
    #{-10 * $intensity}px #{-10 * $intensity}px #{30 * $intensity}px $white,
    #{5 * $intensity}px #{5 * $intensity}px #{10 * $intensity}px rgba(#818da0, 0.3) !important;
}

@mixin neumorphic-pressed($intensity: 1) {
  box-shadow: 
    inset #{10 * $intensity}px #{10 * $intensity}px #{10 * $intensity}px rgba($shadow-color, 0.15),
    inset #{-10 * $intensity}px #{-10 * $intensity}px #{10 * $intensity}px $white,
    inset #{0.2 * $intensity}rem #{0.2 * $intensity}rem #{0.5 * $intensity}rem rgba(#818da0, 0.3),
    inset #{-0.2 * $intensity}rem #{-0.2 * $intensity}rem #{0.5 * $intensity}rem $white !important;
}

@mixin neumorphic-outer-small($intensity: 1) {
  box-shadow: 
    #{-3 * $intensity}px #{-3 * $intensity}px #{8 * $intensity}px $white,
    #{3 * $intensity}px #{3 * $intensity}px #{8 * $intensity}px rgba($shadow-color, 0.25);
}

@mixin neumorphic-inner-small($intensity: 1) {
  box-shadow: 
    inset #{-2 * $intensity}px #{-2 * $intensity}px #{4 * $intensity}px rgba($shadow-color, 0.15),
    inset #{2 * $intensity}px #{2 * $intensity}px #{4 * $intensity}px $white,
    #{-2 * $intensity}px #{-2 * $intensity}px #{6 * $intensity}px $white,
    #{1 * $intensity}px #{1 * $intensity}px #{3 * $intensity}px rgba(#818da0, 0.3);
}

@mixin neumorphic-pressed-small($intensity: 1) {
  box-shadow: 
    inset #{2 * $intensity}px #{2 * $intensity}px #{3 * $intensity}px rgba($shadow-color, 0.15),
    inset #{-2 * $intensity}px #{-2 * $intensity}px #{3 * $intensity}px $white,
    inset #{0.1 * $intensity}rem #{0.1 * $intensity}rem #{0.2 * $intensity}rem rgba(#818da0, 0.3),
    inset #{-0.1 * $intensity}rem #{-0.1 * $intensity}rem #{0.2 * $intensity}rem $white;
}

@mixin neumorphic-above {
  box-shadow:  4px 4px 4px rgba(#818da0, 0.3),
               -4px -4px 4px #ffffff;
}

@mixin neumorphic-default {
  box-shadow: 
    inset -10px -10px 10px rgba($shadow-color, 0),
    inset 10px 10px 10px rgba($white, 0),
    -10px -10px 30px rgba($white, 0),
    5px 5px 10px rgba(#818da0, 0);
}

@mixin transition($property: all, $duration: 300ms) {
  transition: $property $duration;
  transition-timing-function: ease-in-out;
}

// Dark mode mixins
@mixin dark-neumorphic-outer($intensity: 1) {
  box-shadow: 
    #{-10 * $intensity}px #{-10 * $intensity}px #{30 * $intensity}px $dark-shadow-color-dark,
    #{10 * $intensity}px #{10 * $intensity}px #{30 * $intensity}px rgba($dark-shadow-color-light, 0.25);
}

@mixin dark-neumorphic-inner($intensity: 1) {
  box-shadow: 
    inset #{-10 * $intensity}px #{-10 * $intensity}px #{10 * $intensity}px rgba($dark-shadow-color-dark, 0.5),
    inset #{10 * $intensity}px #{10 * $intensity}px #{10 * $intensity}px $dark-shadow-color-light,
    #{-10 * $intensity}px #{-10 * $intensity}px #{30 * $intensity}px $dark-shadow-color-dark,
    #{5 * $intensity}px #{5 * $intensity}px #{10 * $intensity}px rgba(#000, 0.3) !important;
}

@mixin dark-neumorphic-pressed($intensity: 1) {
  box-shadow: 
    inset #{10 * $intensity}px #{10 * $intensity}px #{10 * $intensity}px rgba($dark-shadow-color-dark, 0.5),
    inset #{-10 * $intensity}px #{-10 * $intensity}px #{10 * $intensity}px $dark-shadow-color-light,
    inset #{0.2 * $intensity}rem #{0.2 * $intensity}rem #{0.5 * $intensity}rem rgba(#000, 0.3),
    inset #{-0.2 * $intensity}rem #{-0.2 * $intensity}rem #{0.5 * $intensity}rem $dark-shadow-color-light !important;
}

@mixin dark-neumorphic-outer-small($intensity: 1) {
  box-shadow: 
    #{-3 * $intensity}px #{-3 * $intensity}px #{8 * $intensity}px $dark-shadow-color-dark,
    #{3 * $intensity}px #{3 * $intensity}px #{8 * $intensity}px rgba($dark-shadow-color-light, 0.25);
}

@mixin dark-neumorphic-inner-small($intensity: 1) {
  box-shadow: 
    inset #{-2 * $intensity}px #{-2 * $intensity}px #{4 * $intensity}px rgba($dark-shadow-color-dark, 0.5),
    inset #{2 * $intensity}px #{2 * $intensity}px #{4 * $intensity}px $dark-shadow-color-light,
    #{-2 * $intensity}px #{-2 * $intensity}px #{6 * $intensity}px $dark-shadow-color-dark,
    #{1 * $intensity}px #{1 * $intensity}px #{3 * $intensity}px rgba(#000, 0.3);
}

@mixin dark-neumorphic-pressed-small($intensity: 1) {
  box-shadow: 
    inset #{2 * $intensity}px #{2 * $intensity}px #{3 * $intensity}px rgba($dark-shadow-color-dark, 0.5),
    inset #{-2 * $intensity}px #{-2 * $intensity}px #{3 * $intensity}px $dark-shadow-color-light,
    inset #{0.1 * $intensity}rem #{0.1 * $intensity}rem #{0.2 * $intensity}rem rgba(#000, 0.3),
    inset #{-0.1 * $intensity}rem #{-0.1 * $intensity}rem #{0.2 * $intensity}rem $dark-shadow-color-light;
}

@mixin dark-neumorphic-above {
  box-shadow: 4px 4px 4px rgba(#000, 0.3),
              -4px -4px 4px $dark-shadow-color-light;
}

@mixin dark-neumorphic-default {
  box-shadow: 
    inset -10px -10px 10px rgba($dark-shadow-color-dark, 0),
    inset 10px 10px 10px rgba($dark-shadow-color-light, 0),
    -10px -10px 30px rgba($dark-shadow-color-dark, 0),
    5px 5px 10px rgba(#000, 0);
}

// Styles
#container {
  background: $background-color !important;
  
  .dark & {
    background: $dark-background-color !important;
    color: $dark-text-color;
  }
}

#background {
  opacity: 0.1;
}

.menuShown #container #content h1#title,
#container #content h1#title {
  box-shadow: none !important;
  background: transparent;
  border-bottom: none !important;

  &::before {
    display: none;
  }
}

#main {
  border-top-left-radius: 2rem;
  @include neumorphic-outer;
  
  .dark & {
    @include dark-neumorphic-outer;
  }
}

#content {
  @media (min-width: 900px) {
    left: 280px;
  }

  #toolbar {
    overflow: visible !important;
  }
}

[class*="ReadingPane__ReadingPane___"] > div {
  background: white !important;
  @include neumorphic-outer;
  
  .dark & {
    background: $dark-background-color-light !important;
    @include dark-neumorphic-outer;
  }
}

.home-container .border {
  background: $background-color-dark;
  @include neumorphic-outer(0.5);
  
  .dark & {
    background: $dark-background-color-light;
    @include dark-neumorphic-outer(0.5);
  }
}

.messages [class*="Viewer__sidebar___"] header button {
  @include transition;
  @include neumorphic-default;
  @include neumorphic-inner(0.5);
  border-radius: 16px !important;

  .dark & {
    @include dark-neumorphic-inner(0.5);
  }

  &:hover {
    @include neumorphic-inner(0.5);
    transform: scale(1.01);
    
    .dark & {
      @include dark-neumorphic-inner(0.5);
    }
  }

  &:active {
    @include neumorphic-pressed(0.5);
    transform: scale(0.98);
    
    .dark & {
      @include dark-neumorphic-pressed(0.5);
    }
  }

  &::after {
    // slightly darker than $background-color
    background: color-mix(in srgb, $background-color 85%, black 50%) !important;
    
    .dark & {
      background: color-mix(in srgb, $dark-background-color 85%, black 50%) !important;
    }
  }
}

[class*="LabelList__LabelList___"] {
  padding: 0 8px !important;
  display: flex;
  flex-direction: column;
  gap: 4px;
  overflow: visible;

  @media (max-width: 1200px) {
    flex-direction: row;
  }

  > li {
    margin: 0 !important;
    border-radius: 8px;
    @include transition;
    @include neumorphic-default;

    .dark & {
      color: $dark-text-color;
    }

    &[class*="LabelList__selected___"],
    &:hover {
      background: rgba($white, 0.44);
      @include neumorphic-inner;
      
      .dark & {
        background: $dark-background-color-light;
        @include dark-neumorphic-inner;
      }
    }

    &:active {
      @include neumorphic-pressed;
      
      .dark & {
        @include dark-neumorphic-pressed;
      }
    }
  }
}

#shortcuts > a {
  @include transition;
  background: $background-color !important;
  @include neumorphic-inner;
  
  .dark & {
    background: $dark-background-color !important;
    @include dark-neumorphic-inner;
    color: $dark-text-color;
  }

  .shortcut {
    background: transparent;
  }
  
  &:hover {
    transform: scale(1.05);
  }

  &:active {
    transform: scale(0.95);
    @include neumorphic-pressed;
    
    .dark & {
      @include dark-neumorphic-pressed;
    }
  }
}

.day {
  &:hover {
    background: transparent;
  }
}

#menu {
  background: transparent !important;
  width: 280px;
  
  > ul {
    li {
      width: calc(85% - 10px) !important;
      margin-right: 16px !important;
    }
    
    &::before {
      box-shadow: none !important;
      border-bottom: none !important;
      position: unset !important;

      @media (max-width: 900px) {
        background-color: transparent !important;
      }
    }
  }

  li {
    @include transition;
    @include neumorphic-default;
    
    .dark & {
      color: $dark-text-color;
    }
    
    &:hover {
      background: $background-color;
      @include neumorphic-inner;
      
      .dark & {
        background: $dark-background-color;
        @include dark-neumorphic-inner;
      }
    }

    &:active {
      @include neumorphic-pressed;
      
      .dark & {
        @include dark-neumorphic-pressed;
      }
    }
  }

  li.active > .sub > ul > .active,
  li.active {
    background: $background-color !important;
    color: #2f2e33 !important;
    @include neumorphic-inner;
    
    .dark & {
      background: $dark-background-color !important;
      color: $dark-text-color !important;
      @include dark-neumorphic-inner;
    }

    &::before {
      background: linear-gradient(to bottom, color-mix(in srgb, var(--item-colour) 85%, white 50%), var(--item-colour)) !important;
      
      .dark & {
        background: linear-gradient(to bottom, color-mix(in srgb, var(--item-colour) 85%, $dark-background-color-light 50%), var(--item-colour)) !important;
      }
    }
  }
}

[class*="MessageList__MessageList___"] {
  background: transparent;
  border: unset !important;
  overflow: visible;
  width: 100px;

  @media (max-width: 1200px) {
    width: 100%;
  }

  header {
    background: transparent;
    border: unset !important;
    padding: 8px 0;

    label {
      background: #eef1f6;
      @include neumorphic-inner(0.5);
      
      .dark & {
        background: $dark-background-color-light;
        @include dark-neumorphic-inner(0.5);
      }

      border-radius: 16px;
      background: white;

      &:has(input:focus) {
        box-shadow: inset .2rem .2rem .5rem rgba(#818da0, 0.3),
                  inset -.2rem -.2rem .5rem $white !important;
                  
        .dark & {
          box-shadow: inset .2rem .2rem .5rem rgba(#000, 0.3),
                    inset -.2rem -.2rem .5rem $dark-shadow-color-light !important;
        }
      }
      
      input {
        padding: 10px 8px;
        
        .dark & {
          color: $dark-text-color;
        }
      }
    }
    
    label:has(input:focus) {
      box-shadow: .3rem .3rem .6rem rgba(#818da0, 0.3),
                  -.2rem -.2rem .5rem $white;
                  
      .dark & {
        box-shadow: .3rem .3rem .6rem rgba(#000, 0.3),
                    -.2rem -.2rem .5rem $dark-shadow-color-light;
      }
    }
  }

  footer {
    border: unset !important;
  }

  ol {
    background: $white;
    border-radius: 16px;
    @include neumorphic-outer(0.5);
    
    .dark & {
      background: $dark-background-color-light;
      @include dark-neumorphic-outer(0.5);
    }

    [class*="MessageList__unread___"] {
      background: $white;
      
      .dark & {
        background: $dark-background-color-light;
      }
    }
  
    li {
      @include transition(all, 100ms);
      @include neumorphic-default;
      
      .dark & {
        color: $dark-text-color;
      }
    
      &:hover {
        background: rgba($background-color, 0.44);
        @include neumorphic-inner(0.5);
        
        .dark & {
          background: $dark-background-color-light;
          @include dark-neumorphic-inner(0.5);
        }
      }

      &:active {
        @include neumorphic-pressed(0.5);
        
        .dark & {
          @include dark-neumorphic-pressed(0.5);
        }
      }

      &[class*="MessageList__selected___"] {
        background: rgba($shadow-color, 0.15) !important;
        @include neumorphic-pressed(0.4);
        
        .dark & {
          background: rgba($dark-shadow-color-dark, 0.15) !important;
          @include dark-neumorphic-pressed(0.4);
        }
      }
    }
  }
}

.formattedText>.wrapper,
.coneqtMessage.composer .prime {
  overflow-x: visible !important;
}

.cke_contents {
  @include neumorphic-outer(0.5);
  
  .dark & {
    @include dark-neumorphic-outer(0.5);
    background: $dark-background-color-light;
  }
}

.userInfosvgdiv {
  filter: invert(1);

  .tooltiptext {
    filter: invert(0);
    box-shadow: unset !important;
  }
}

.connectedNotificationsWrapper > div > button {
  background: var(--theme-primary) !important;
  svg g {
    fill: var(--text-primary) !important;
  }
}

button.addedButton {
  background: var(--theme-primary) !important;
  color: var(--text-primary) !important;
  svg {
    fill: var(--text-primary) !important;
  }
}

[class*="Avatar__Avatar___"] {
  box-shadow: 0 0 10px var(--better-main);
}

.blind:has(> input[type="checkbox"]) {
  display: flex;
  place-items: center;

  label {
    display: block;
  }
}

.uiFileHandlerPanel {
  background: color-mix(in srgb, $background-color 35%, white 90%) !important;
  @include neumorphic-outer;
  
  .dark & {
    background: color-mix(in srgb, $dark-background-color 35%, $dark-background-color-light 90%) !important;
    @include dark-neumorphic-outer;
  }
}

[class*="Container__container___"],
[class*="Document__document___"],
[class*="Module__wrapper___"] {
  overflow: visible !important;
}

[class*="RootModule__root-module___"] {
  overflow: visible !important;

  [class*="Module__wrapper___"] {
    @include neumorphic-outer;
    
    .dark & {
      @include dark-neumorphic-outer;
    }
  }
}

[class*="notifications__notifications___"] > button,
.addedButton,
.uiButton:not(.logout) {
  border-radius: 16px !important;
  @include transition;
  @include neumorphic-inner(0.5);
  background: rgba($white, 0.6) !important;
  
  .dark & {
    @include dark-neumorphic-inner(0.5);
    background: $dark-background-color-light !important;
    color: $dark-text-color;
  }

  &:hover {
    background: rgba($white, 0.44) !important;
    @include neumorphic-inner;
    
    .dark & {
      background: $dark-background-color-light !important;
      @include dark-neumorphic-inner;
    }
  }

  &:active {
    @include neumorphic-pressed;
    
    .dark & {
      @include dark-neumorphic-pressed;
    }
  }
}

input[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  
  width: 24px;
  height: 24px;
  border-radius: 6px;
  background-color: $background-color !important;
  cursor: pointer;
  position: relative;
  margin: 0;
  
  .dark & {
    background-color: $dark-background-color !important;
  }
  
  @include neumorphic-outer-small(0.5);
  @include transition(all, 200ms);
  
  .dark & {
    @include dark-neumorphic-outer-small(0.5);
  }

  &:hover {
    transform: scale(1.05);
  }

  &:checked {
    @include neumorphic-pressed-small(0.7);
    background-color: mix($background-color, $text-color, 85%);
    
    .dark & {
      @include dark-neumorphic-pressed-small(0.7);
      background-color: mix($dark-background-color, $dark-text-color, 85%);
    }
  }

  &::after {
    font-family: 'IconFamily';
    content: '\e9e4'; // Unicode character for a checkmark
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: $text-color;
    font-size: 16px;
    font-weight: bold;
    
    .dark & {
      color: $dark-text-color;
    }
    
    transition: cubic-bezier(.53,0,.52,1) transform 200ms;
  }

  &:checked::after {
    transform: translate(-50%, -50%) scale(1);
  }

  &:focus {
    outline: none;
    @include neumorphic-inner-small(0.5);
    
    .dark & {
      @include dark-neumorphic-inner-small(0.5);
    }
  }

  &:active {
    @include neumorphic-pressed-small(0.9);
    
    .dark & {
      @include dark-neumorphic-pressed-small(0.9);
    }
  }
}

ul.singleSelect {
  margin-top: 8px !important;
}

[class*="PillBox__PillBox___"],
.pillbox {
  button {
    color: rgba(black, 0.5);
    
    .dark & {
      color: rgba(white, 0.5);
    }
    
    background: transparent !important;
    transition: color 200ms;

    &:hover {
      color: black;
      
      .dark & {
        color: white;
      }
    }

    &[class*="PillBox__active___"],
    &.depressed {
      color: black;
      
      .dark & {
        color: white;
      }
      
      background: rgba($background-color, 0.5) !important;
      @include neumorphic-inner(1);
      
      .dark & {
        background: rgba($dark-background-color, 0.5) !important;
        @include dark-neumorphic-inner(1);
      }
    }
  }
}

[class*="Button__Button___"] {
  background: #eef1f6 !important;
  
  .dark & {
    background: $dark-background-color-light !important;
    color: $dark-text-color;
  }
  
  border: none;
  
  padding: 10px 8px;
  border-radius: 16px;

  &:not([class*="Button__circular___"]) {
    @include neumorphic-inner;
    
    .dark & {
      @include dark-neumorphic-inner;
    }
  }

  &[class*="Button__circular___"] {
    @include neumorphic-inner(0.5);
    
    .dark & {
      @include dark-neumorphic-inner(0.5);
    }
  }

  &:focus {
    box-shadow: inset .2rem .2rem .5rem rgba(#818da0, 0.3),
              inset -.2rem -.2rem .5rem $white !important;
              
    .dark & {
      box-shadow: inset .2rem .2rem .5rem rgba(#000, 0.3),
                inset -.2rem -.2rem .5rem $dark-shadow-color-light !important;
    }
    
              
    &::placeholder {
      color: rgba(black, 0.5) !important;
      
      .dark & {
        color: rgba(white, 0.5) !important;
      }
    }
  }
}

.uiSlidePane {
  .header {
    background: transparent !important;


    [data-id="send"]:not([disabled]) {
      @include neumorphic-default;
      @include neumorphic-inner(0.5);
      border-radius: 16px !important;
      background: rgba(white, 0.5) !important;
      
      .dark & {
        @include dark-neumorphic-inner(0.5);
        background: $dark-background-color-light !important;
      }
      
      &:hover {
        @include neumorphic-inner(0.5);
        transform: scale(1.01);
        
        .dark & {
          @include dark-neumorphic-inner(0.5);
        }
      }

      &:active {
        @include neumorphic-pressed(0.5);
        transform: scale(0.98);
        
        .dark & {
          @include dark-neumorphic-pressed(0.5);
        }
      }

      &::after {
        // slightly darker than $background-color
        background: color-mix(in srgb, $background-color 85%, black 50%) !important;
        
        .dark & {
          background: color-mix(in srgb, $dark-background-color 85%, black 50%) !important;
        }
      }
    }
  }

  .footer {
    @include neumorphic-inner;
    
    .dark & {
      @include dark-neumorphic-inner;
    }
  }

  .content {
    overflow: visible !important;

    .coneqtMessage .body .wrapper {
      overflow: visible !important;
    }
  }

  .anyoneSelect {
    overflow: visible !important;

    input.singleSelect {
      background: #eef1f6 !important;
      
      .dark & {
        background: $dark-background-color-light !important;
        color: $dark-text-color;
      }
      
      border: none;
      @include neumorphic-inner;
      
      .dark & {
        @include dark-neumorphic-inner;
      }
      
      padding: 10px 8px;
      border-radius: 16px;
  
      &:focus {
        box-shadow: inset .2rem .2rem .5rem rgba(#818da0, 0.3),
                  inset -.2rem -.2rem .5rem $white !important;
                  
        .dark & {
          box-shadow: inset .2rem .2rem .5rem rgba(#000, 0.3),
                    inset -.2rem -.2rem .5rem $dark-shadow-color-light !important;
        }
        
                  
        &::placeholder {
          color: rgba(black, 0.5) !important;
          
          .dark & {
            color: rgba(white, 0.5) !important;
          }
        }
      }
    }
  }


  .prime {
    overflow: visible !important;

    input.subject {
      background: #eef1f6 !important;
      
      .dark & {
        background: $dark-background-color-light !important;
        color: $dark-text-color;
      }
      
      border: none;
      @include neumorphic-inner(0.5);
      
      .dark & {
        @include dark-neumorphic-inner(0.5);
      }
      
      padding: 10px 8px;
      border-radius: 16px;
  
      &:focus {
        box-shadow: inset .2rem .2rem .5rem rgba(#818da0, 0.3),
                  inset -.2rem -.2rem .5rem $white !important;
                  
        .dark & {
          box-shadow: inset .2rem .2rem .5rem rgba(#000, 0.3),
                    inset -.2rem -.2rem .5rem $dark-shadow-color-light !important;
        }
      }
    }

    .cke_panel {
      margin-top: 10px;
    }

    .cke_toolbar {
      overflow: visible !important;

      a.cke_button:hover {
        background: rgba(white, 0.5) !important;
        @include neumorphic-inner(0.5);
        
        .dark & {
          background: $dark-background-color-light !important;
          @include dark-neumorphic-inner(0.5);
        }
      }

      .cke_button:hover,
      .cke_combo_button:hover {
        background: rgba(white, 0.5) !important;
        @include neumorphic-inner(0.5);
        
        .dark & {
          background: $dark-background-color-light !important;
          @include dark-neumorphic-inner(0.5);
        }
      }

      .cke_combo_off .cke_combo_button {
        background-color: white !important;
        
        .dark & {
          background-color: $dark-background-color-light !important;
          color: $dark-text-color;
        }
      }

      .cke_combo_on .cke_combo_button,
      .cke_button_on {
        background-color: rgba(white, 0.5) !important;
        color: black;
        @include neumorphic-inner(0.5);
        
        .dark & {
          background-color: $dark-background-color-light !important;
          color: $dark-text-color;
          @include dark-neumorphic-inner(0.5);
        }
      }
    }
  }
}

.documents {
  table {
    border-spacing: 0 16px !important;
    
    tr.document {
      @include neumorphic-outer;
      background: color-mix(in srgb, $background-color 85%, white 30%) !important;
      
      .dark & {
        @include dark-neumorphic-outer;
        background: color-mix(in srgb, $dark-background-color 85%, $dark-background-color-light 30%) !important;
        color: $dark-text-color;
      }
    }
  }

}

#main>.timetablepage>.quickbar .actions>button>svg,
#main>.timetablepage>.quickbar .actions>a>svg {
  margin: 0 !important;
}